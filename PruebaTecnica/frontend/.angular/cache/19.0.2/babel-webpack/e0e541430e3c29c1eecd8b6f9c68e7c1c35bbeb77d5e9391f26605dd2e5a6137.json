{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component } from '@angular/core';\nlet PantallaBusquedaComponent = class PantallaBusquedaComponent {\n  constructor(clienteService, router) {\n    this.clienteService = clienteService;\n    this.router = router;\n    this.tipoDocumento = '';\n    this.numeroDocumento = '';\n    this.botonHabilitado = false;\n    // Lista de tipos de documento para un control más fácil en el template\n    this.tiposDocumento = ['DNI', 'RUC', 'Carnet Extranjería'];\n  }\n  // Verifica que los campos no estén vacíos y que el número de documento tenga un formato válido\n  verificarCampos() {\n    this.botonHabilitado = this.tipoDocumento !== '' && /^\\d{8,11}$/.test(this.numeroDocumento);\n  }\n  // Llama al servicio y navega al resumen o muestra un error\n  buscarCliente() {\n    this.clienteService.obtenerCliente({\n      tipo: this.tipoDocumento,\n      numero: this.numeroDocumento\n    }).subscribe(cliente => {\n      // Verifica si el cliente existe antes de navegar\n      if (cliente) {\n        sessionStorage.setItem('cliente', JSON.stringify(cliente));\n        this.router.navigate(['/resumen']);\n      } else {\n        alert('Cliente no encontrado.');\n      }\n    }, () => {\n      alert('Error en el servidor o no se pudo encontrar al cliente.');\n    });\n  }\n};\nPantallaBusquedaComponent = __decorate([Component({\n  selector: 'app-pantalla-busqueda',\n  templateUrl: './src/app/components/pantalla-busqueda/pantalla-busqueda.component.html',\n  styleUrls: ['./src/app/componentspantalla-busqueda.component.css']\n})], PantallaBusquedaComponent);\nexport { PantallaBusquedaComponent };","map":{"version":3,"names":["Component","PantallaBusquedaComponent","constructor","clienteService","router","tipoDocumento","numeroDocumento","botonHabilitado","tiposDocumento","verificarCampos","test","buscarCliente","obtenerCliente","tipo","numero","subscribe","cliente","sessionStorage","setItem","JSON","stringify","navigate","alert","__decorate","selector","templateUrl","styleUrls"],"sources":["/workspaces/PruebaTecnica/PruebaTecnica/frontend/src/app/components/pantalla-busqueda/pantalla-busqueda.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ClienteService } from '../../services/cliente.service';\r\n\r\n@Component({\r\n  selector: 'app-pantalla-busqueda',\r\n  templateUrl: './src/app/components/pantalla-busqueda/pantalla-busqueda.component.html',\r\n  styleUrls: ['./src/app/componentspantalla-busqueda.component.css']\r\n})\r\nexport class PantallaBusquedaComponent {\r\n  tipoDocumento = '';\r\n  numeroDocumento = '';\r\n  botonHabilitado = false;\r\n\r\n  // Lista de tipos de documento para un control más fácil en el template\r\n  tiposDocumento: string[] = ['DNI', 'RUC', 'Carnet Extranjería'];\r\n\r\n  constructor(private clienteService: ClienteService, private router: Router) {}\r\n\r\n  // Verifica que los campos no estén vacíos y que el número de documento tenga un formato válido\r\n  verificarCampos() {\r\n    this.botonHabilitado = this.tipoDocumento !== '' && /^\\d{8,11}$/.test(this.numeroDocumento);\r\n  }\r\n\r\n  // Llama al servicio y navega al resumen o muestra un error\r\n  buscarCliente() {\r\n    this.clienteService.obtenerCliente({ tipo: this.tipoDocumento, numero: this.numeroDocumento })\r\n      .subscribe(cliente => {\r\n        // Verifica si el cliente existe antes de navegar\r\n        if (cliente) {\r\n          sessionStorage.setItem('cliente', JSON.stringify(cliente));\r\n          this.router.navigate(['/resumen']);\r\n        } else {\r\n          alert('Cliente no encontrado.');\r\n        }\r\n      }, () => {\r\n        alert('Error en el servidor o no se pudo encontrar al cliente.');\r\n      });\r\n  }\r\n}\r\n"],"mappings":";;;;;;;AAAA,SAASA,SAAS,QAAQ,eAAe;AASlC,IAAMC,yBAAyB,GAA/B,MAAMA,yBAAyB;EAQpCC,YAAoBC,cAA8B,EAAUC,MAAc;IAAtD,KAAAD,cAAc,GAAdA,cAAc;IAA0B,KAAAC,MAAM,GAANA,MAAM;IAPlE,KAAAC,aAAa,GAAG,EAAE;IAClB,KAAAC,eAAe,GAAG,EAAE;IACpB,KAAAC,eAAe,GAAG,KAAK;IAEvB;IACA,KAAAC,cAAc,GAAa,CAAC,KAAK,EAAE,KAAK,EAAE,oBAAoB,CAAC;EAEc;EAE7E;EACAC,eAAeA,CAAA;IACb,IAAI,CAACF,eAAe,GAAG,IAAI,CAACF,aAAa,KAAK,EAAE,IAAI,YAAY,CAACK,IAAI,CAAC,IAAI,CAACJ,eAAe,CAAC;EAC7F;EAEA;EACAK,aAAaA,CAAA;IACX,IAAI,CAACR,cAAc,CAACS,cAAc,CAAC;MAAEC,IAAI,EAAE,IAAI,CAACR,aAAa;MAAES,MAAM,EAAE,IAAI,CAACR;IAAe,CAAE,CAAC,CAC3FS,SAAS,CAACC,OAAO,IAAG;MACnB;MACA,IAAIA,OAAO,EAAE;QACXC,cAAc,CAACC,OAAO,CAAC,SAAS,EAAEC,IAAI,CAACC,SAAS,CAACJ,OAAO,CAAC,CAAC;QAC1D,IAAI,CAACZ,MAAM,CAACiB,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;MACpC,CAAC,MAAM;QACLC,KAAK,CAAC,wBAAwB,CAAC;MACjC;IACF,CAAC,EAAE,MAAK;MACNA,KAAK,CAAC,yDAAyD,CAAC;IAClE,CAAC,CAAC;EACN;CACD;AA9BYrB,yBAAyB,GAAAsB,UAAA,EALrCvB,SAAS,CAAC;EACTwB,QAAQ,EAAE,uBAAuB;EACjCC,WAAW,EAAE,yEAAyE;EACtFC,SAAS,EAAE,CAAC,qDAAqD;CAClE,CAAC,C,EACWzB,yBAAyB,CA8BrC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}